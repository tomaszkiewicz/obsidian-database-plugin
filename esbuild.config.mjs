import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules'
import vuePlugin from 'esbuild-vue';
import { sassPlugin } from 'esbuild-sass-plugin'
import fs from 'fs';

const banner =
	`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const outDir = '/mnt/d/OneDrive/Obsidian/PluginsDev/.obsidian/plugins/obsidian-database-plugin'

const prod = (process.argv[2] === 'production');

// Obsidian requires that the style file is called styles.css
const renameCSSFile = () => fs.rename(outDir + '/main.css', outDir + '/styles.css', () => { })
const copyManifest = () => fs.copyFile('manifest.json', outDir, () => { })

const afterBuild = () => {
	renameCSSFile()
	copyManifest()
}

esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	plugins: [
		vuePlugin({
			extractCss: true,
		}),
		sassPlugin(),
	],
	loader: {
		".woff": "dataurl",
		".woff2": "dataurl",
		".eot": "dataurl",
		".ttf": "dataurl",
		// ".woff": "file",
		// ".woff2": "file",
		// ".eot": "file",
		// ".ttf": "file",
	},
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/closebrackets',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/comment',
		'@codemirror/fold',
		'@codemirror/gutter',
		'@codemirror/highlight',
		'@codemirror/history',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/matchbrackets',
		'@codemirror/panel',
		'@codemirror/rangeset',
		'@codemirror/rectangular-selection',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/stream-parser',
		'@codemirror/text',
		'@codemirror/tooltip',
		'@codemirror/view',
		...builtins],
	format: 'cjs',
	target: 'es2016',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: outDir + '/main.js',
	watch: prod ? false : {
		onRebuild: afterBuild
	},
}).then(afterBuild).catch(() => process.exit(1));
